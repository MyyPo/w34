version: '3.9'
services:
  main_app:
    container_name: app_container
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
      - DATABASE_HOST=${AUTH_DB_HOST}
      - DATABASE_PORT=${AUTH_DB_PORT}
    tty: true
    build:
      context: .
      dockerfile: ./build/main/Dockerfile.dev
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - ./:/app
    depends_on:
      - main_redis
      - main_psqldb
    networks:
      - main

  main_redis:
    image: redis:7.0.5-alpine
    container_name: main_redis_container
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - main

  main_psqldb:
    image: postgres:latest
    container_name: main_postgres_container
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
      - DATABASE_HOST=${AUTH_DB_HOST}
    ports:
      - '5432:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - main

  main_pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80" 

volumes:
  redis_data:
    driver: local
  pg_data:

networks:
  main:
    driver: bridge