version: '3.9'
services:
  auth_app:
    container_name: auth_container
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
      - DATABASE_HOST=${AUTH_DB_HOST}
      - DATABASE_PORT=${AUTH_DB_PORT}
    tty: true
    build:
      context: .
      dockerfile: ./build/auth/Dockerfile
    ports:
      - 8080:8080
    restart: on-failure
    volumes:
      - ./:/app
    depends_on:
      - auth_redis
      - auth_psqldb
    networks:
      - auth

  auth_redis:
    image: redis:7.0.5-alpine
    container_name: auth_redis_container
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - auth_cache:/data
    networks:
      - auth

  auth_psqldb:
    image: postgres:latest
    container_name: auth_postgres_container
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
      - DATABASE_HOST=${AUTH_DB_HOST}
    ports:
      - '1234:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - auth

  auth_pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80" 

volumes:
  auth_cache:
    driver: local
  pg_data:

networks:
  auth:
    driver: bridge